<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unifs.sdbst.app.dao.primary.life.SatisfyWinnersMapper">
	
    <sql id="appSatisfyWinnersColumns">
    	a.id AS "id",
    	a.name AS "name",
    	a.login_name AS "loginName",
    	a.age AS "age",
    	a.sex AS "sex",
    	a.phone AS "phone",
    	a.education AS "education",
    	a.industry AS "industry",
    	a.answer AS "answer",
    	a.advice AS "advice",
    	a.other_advice AS "otherAdvice",
    	a.award AS "award",
    	a.award_num AS "awardNum",
    	a.code AS "code",
    	a.create_date AS "createDate",
    	a.del_flag AS "delFlag"
    </sql>
    
    <sql id="appSatisfyWinnersJoins">
    </sql>
	
	<select id="get" resultType="com.unifs.sdbst.app.bean.life.SatisfyWinners">
		SELECT
			<include refid="appSatisfyWinnersColumns"/>
		FROM APP_SATISFY_WINNERS a
			<include refid="appSatisfyWinnersJoins"/>
		WHERE a.id = #{id} 
	</select>
	
	<select id="findList" resultType="com.unifs.sdbst.app.bean.life.SatisfyWinners">
		SELECT
			<include refid="appSatisfyWinnersColumns" />
		FROM APP_SATISFY_WINNERS a
			<include refid="appSatisfyWinnersJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.phone is not null 
		</where>
		ORDER BY a.create_date DESC
	</select>
	
	<select id="findListByIds" resultType="com.unifs.sdbst.app.bean.life.SatisfyWinners">
		SELECT
			<include refid="appSatisfyWinnersColumns" />
		FROM APP_SATISFY_WINNERS a
			<include refid="appSatisfyWinnersJoins" />
		<where>
			a.del_flag = '0'
			AND a.phone is not null 
			<if test="ids != null and ids.length>0"> 
				AND a.id in
				<foreach collection="ids" item="id" index="index" open="(" separator="," close=")">  
			    	#{id}  
			    </foreach>  
	    	</if>
		</where>
		ORDER BY a.create_date DESC
	</select>
	
	<select id="countCode" resultType="Integer">
		SELECT
			count(code)
		FROM APP_SATISFY_WINNERS a
			<include refid="appSatisfyWinnersJoins" />
		<where>
			a.code = #{code}
		</where>
		GROUP BY a.code
	</select>
	
	<select id="countPhone" resultType="Integer">
		SELECT
			count(phone)
		FROM APP_SATISFY_WINNERS a
			<include refid="appSatisfyWinnersJoins" />
		<where>
			a.phone = #{phone}
		</where>
		GROUP BY a.phone
	</select>
	
	<select id="findAdviceList" resultType="com.unifs.sdbst.app.bean.life.SatisfyWinners">
		SELECT
			a.id AS "id",
			a.name AS "name",
			a.phone AS "phone",
	    	a.advice AS "advice",
	    	a.other_advice AS "otherAdvice",
	    	a.create_date AS "createDate",
	    	a.del_flag AS "delFlag"
		FROM APP_SATISFY_WINNERS a
			<include refid="appSatisfyWinnersJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND (a.advice is not null OR a.other_advice is not null)
			<if test="createDate != null">AND a.create_date &gt;= #{createDate}</if>
			<if test="updateDate != null">AND a.create_date &lt;= #{updateDate}</if>
		</where>
		ORDER BY a.create_date DESC
	</select>
	
	<select id="countAward" resultType="com.unifs.sdbst.app.bean.life.SatisfyWinners">
		select 
			count(award) as "out",
			award as "name"
		from APP_SATISFY_WINNERS  
		where del_flag='0' 
		group by award
	</select>
	
	<insert id="insert">
		INSERT INTO APP_SATISFY_WINNERS(
			id,
    		name,
    		login_name,
    		age,
    		sex,
    		phone,
    		education,
    		industry,
    		answer,
    		advice,
    		other_advice,
    		award,
    		award_num,
    		code,
    		create_date
		) VALUES (
			#{id,jdbcType=VARCHAR},
			#{name,jdbcType=VARCHAR},
			#{loginName,jdbcType=VARCHAR},
			#{age,jdbcType=INTEGER},
			#{sex,jdbcType=VARCHAR},
			#{phone,jdbcType=VARCHAR},
			#{education,jdbcType=VARCHAR},
			#{industry,jdbcType=VARCHAR},
			#{answer,jdbcType=VARCHAR},
			#{advice,jdbcType=VARCHAR},
			#{otherAdvice,jdbcType=VARCHAR},
			#{award,jdbcType=VARCHAR},
			#{awardNum,jdbcType=VARCHAR},
			#{code,jdbcType=VARCHAR},
			#{createDate}
		)
	</insert>
	
	<update id="update">
		UPDATE APP_SATISFY_WINNERS SET 
			name = #{name}, 
			login_name = #{loginName}, 
			phone = #{phone}, 
			award = #{award},
			award_num = #{awardNum},
			code = #{code}
		WHERE id = #{id}
	</update>
	
	<update id="updateAdvice">
		UPDATE APP_SATISFY_WINNERS SET 
			advice = #{advice}, 
			other_advice = #{otherAdvice}
		WHERE id = #{id}
	</update>
	
	<update id="updateAward">
		UPDATE APP_SATISFY_WINNERS SET 
			award = #{award},
			award_num = #{awardNum},
			code = #{code}
		WHERE id = #{id}
	</update>
	
	<update id="updateAwardNum">
		UPDATE APP_SATISFY_WINNERS SET 
			award_num = #{awardNum}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE APP_SATISFY_WINNERS SET 
			del_flag = '1'
		WHERE id = #{id}
	</update>
	
	<update id="deleteAll">
		UPDATE APP_SATISFY_WINNERS SET del_flag = '1'
	</update>
	
</mapper>